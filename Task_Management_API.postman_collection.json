{
	"info": {
		"_postman_id": "a8a0c0d0-5b1a-4e1a-8f0a-3e1b1e1a1e1a",
		"name": "Task Management API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    pm.environment.set(\"token\", pm.response.json().token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"age\": 30\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"register"
							]
						},
						"description": "Registers a new user and saves the JWT token to the environment."
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    pm.environment.set(\"token\", pm.response.json().token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						},
						"description": "Logs in a user and saves the JWT token to the environment."
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						},
						"description": "Gets the profile of the currently authenticated user."
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Gets a list of all registered users."
					},
					"response": []
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get All Tasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tasks?status=pending",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks"
							],
							"query": [
								{
									"key": "status",
									"value": "pending",
									"description": "(Optional) Filter tasks by status: 'pending', 'in-progress', 'completed'"
								},
								{
									"key": "dueDate",
									"value": "2025-12-31",
									"description": "(Optional) Filter tasks by due date.",
									"disabled": true
								}
							]
						},
						"description": "Gets all tasks for the authenticated user, with optional filtering."
					},
					"response": []
				},
				{
					"name": "Create Task",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My First Task\",\n    \"description\": \"This is the description of my first task.\",\n    \"status\": \"pending\",\n    \"dueDate\": \"2025-12-31\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks"
							]
						},
						"description": "Creates a new task for the authenticated user."
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"in-progress\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/tasks/YOUR_TASK_ID",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								"YOUR_TASK_ID"
							]
						},
						"description": "Updates an existing task. Replace `YOUR_TASK_ID` with an actual task ID."
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tasks/YOUR_TASK_ID",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								"YOUR_TASK_ID"
							]
						},
						"description": "Deletes a task. Replace `YOUR_TASK_ID` with an actual task ID."
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
